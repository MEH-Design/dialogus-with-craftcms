/*
REM Fallback
============
The `@include rem($property, $values)` mixin automatically creates a rem fallback, assuming a base font size of 16px.
[Made by Hugo Giraudel.](http://hugogiraudel.com/2013/03/18/ultimate-rem-mixin/)
    <p>This</p>
    <code>@include rem(padding, 1rem 2rem);</code>
    <p>Compiles to..</p>
    <code>padding: 16px 32px;<br>
    padding: 1rem 2rem;</code>
*/

@function parseInt($n) {
  @return $n / ($n * 0 + 1);
}

@mixin rem($property, $values) {
  $px : ();
  $rem: ();

  @each $value in $values {

    @if $value == 0 or $value == auto {
      $px : append($px , $value);
      $rem: append($rem, $value);
    }

    @else {
      $unit: unit($value);
      $val: parseInt($value);

      @if $unit == "px" {
        $px : append($px,  $value);
        $rem: append($rem, ($val / 16 + rem));
      }

      @if $unit == "rem" {
        $px : append($px,  ($val * 16 + px));
        $rem: append($rem, $value);
      }
    }
  }

  @if $px == $rem {
    #{$property}: $px;
  } @else {
    #{$property}: $px;
    #{$property}: $rem;
  }
}
